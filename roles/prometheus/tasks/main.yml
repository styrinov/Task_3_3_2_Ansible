#SPDX-License-Identifier: MIT-0
---
# tasks file for roles/prometheus
- name: Install unzip for extracting Prometheus
  apt:
    name: unzip
    state: present
    update_cache: yes

- name: Create Prometheus user
  user:
    name: "{{ prometheus_user }}"
    system: yes
    shell: /bin/false
    home: "{{ prometheus_data_dir }}"
    create_home: no

- name: Create Prometheus configuration directory
  file:
    path: "{{ prometheus_config_dir }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0755'

- name: Create Prometheus data directory
  file:
    path: "{{ prometheus_data_dir }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0755'

- name: Download Prometheus
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    mode: '0644'

- name: Extract Prometheus
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp
    remote_src: yes

- name: Copy Prometheus binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "{{ prometheus_binary_dir }}/{{ item }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0755'
    remote_src: yes
  loop:
    - prometheus
    - promtool

- name: Copy Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0644'
  notify: Restart Prometheus

- name: Copy Prometheus alerting rules
  template:
    src: rules.yml.j2
    dest: "{{ prometheus_config_dir }}/rules.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: '0644'
  notify: Restart Prometheus  

- name: Create Prometheus systemd service
  copy:
    dest: "{{ prometheus_service_file }}"
    content: |
      [Unit]
      Description=Prometheus Monitoring
      Wants=network-online.target
      After=network-online.target

      [Service]
      User={{ prometheus_user }}
      Group={{ prometheus_group }}
      Type=simple
      ExecStart={{ prometheus_binary_dir }}/prometheus \
        --config.file={{ prometheus_config_dir }}/prometheus.yml \
        --storage.tsdb.path={{ prometheus_data_dir }}
      Restart=always

      [Install]
      WantedBy=multi-user.target
    mode: '0644'
  notify: Restart Prometheus

- name: Ensure Prometheus service is enabled and started
  systemd:
    name: prometheus
    enabled: yes
    state: started

- name: Clean up Prometheus tarball
  file:
    path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    state: absent

- name: Clean up Prometheus extracted directory
  file:
    path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"
    state: absent